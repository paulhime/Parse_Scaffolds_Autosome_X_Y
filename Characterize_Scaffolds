##########################################################################################
#### Filter genome assembly for scaffolds/contigs >= 10000 bp ####
##########################################################################################

awk -v min="10000" 'BEGIN {RS = ">" ; ORS = "" ; gsub(" ","_",$0)} length($2) >= min {print ">"$0}' scrubbed_genome.fasta > scrubbed_genome_10kb+.fasta

### Calculate total number of scaffolds/contigs >= 10000 bp
grep -c ">" scrubbed_genome_10kb+.fasta
3532

### Calculate total bp in scaffolds/contigs >= 10000 bp
grep -v ">" scrubbed_genome_10kb+.fasta | tr -d [:space:] | wc -c
2895527362

##########################################################################################
#### Count reads for male and each female ####
##########################################################################################

### Count male reads

zcat decontam_short_1.fastq.gz | echo $((`wc -l`/4))
182695860
zcat decontam_short_2.fastq.gz | echo $((`wc -l`/4))
182695860

### Count combined female reads

zcat Distichus_female_combined.R1.fastq.gz | echo $((`wc -l`/4))
354318917
zcat Distichus_female_combined.R2.fastq.gz | echo $((`wc -l`/4))
354318917

### Count separate female reads

zcat 1005_NEXTflex_trimmed_rev_A_adapter_1_0pt11_tlrnt_R1.fastq.gz | echo $((`wc -l`/4))
178705151
zcat 1005_NEXTflex_trimmed_rev_A_adapter_1_0pt11_tlrnt_R2.fastq.gz | echo $((`wc -l`/4))
178705151
zcat 8061_NEXTflex_trimmed_rev_A_adapter_1_0pt11_tlrnt_R1.fastq.gz | echo $((`wc -l`/4))
175613766
zcat 8061_NEXTflex_trimmed_rev_A_adapter_1_0pt11_tlrnt_R2.fastq.gz | echo $((`wc -l`/4))
175613766

##########################################################################################
#### Read mapping to length-filtered assembly ####
##########################################################################################

### combine R1 and R2 across both females

cat 1005_NEXTflex_trimmed_rev_A_adapter_1_0pt11_tlrnt_R1.fastq.gz 8061_NEXTflex_trimmed_rev_A_adapter_1_0pt11_tlrnt_R1.fastq.gz \
    > /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/Distichus_female_combined.R1.fastq.gz
cat 1005_NEXTflex_trimmed_rev_A_adapter_1_0pt11_tlrnt_R2.fastq.gz 8061_NEXTflex_trimmed_rev_A_adapter_1_0pt11_tlrnt_R2.fastq.gz \
    > /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/Distichus_female_combined.R2.fastq.gz

###  build bowtie2 indices for the length-filtered assembly

#MSUB -N bowtie2.build.sh
#MSUB -l nodes=1:ppn=24,mem=122gb,walltime=6:00:00
#MSUB -M paul.hime@ku.edu
#MSUB -m abe
#MSUB -r n
#MSUB -j oe
#MSUB -q sixhour
#MSUB -d /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping

/panfs/pfs.local/work/bi/bin/bowtie2-2.3.3.1-linux-x86_64/bowtie2-build --threads 24 /panfs/pfs.local/scratch/glor/p633h050/anolis/dovetail/scrubbed_genome_10kb+.fasta /panfs/pfs.local/scratch/glor/p633h050/anolis/dovetail/scrubbed_genome_10kb+

### read map the male reads to the length-filtered assembly

#MSUB -N map.male.sh
#MSUB -l nodes=1:ppn=24,mem=122gb,walltime=6:00:00
#MSUB -M paul.hime@ku.edu
#MSUB -m abe
#MSUB -r n
#MSUB -j oe
#MSUB -q sixhour
#MSUB -d /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping

/panfs/pfs.local/work/bi/bin/bowtie2-2.3.3.1-linux-x86_64/bowtie2 \
     -x /panfs/pfs.local/scratch/glor/p633h050/anolis/dovetail/scrubbed_genome_10kb+ \
     -1 /panfs/pfs.local/work/glor/a499a400/anolis/contam_filtered/decontam_short_1.fastq.gz \
     -2 /panfs/pfs.local/work/glor/a499a400/anolis/contam_filtered/decontam_short_2.fastq.gz \
     -p 24 \
     -S /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.male.sam

### read map the combined female reads to the length-filtered assembly

#MSUB -N map.female.sh
#MSUB -l nodes=1:ppn=24,mem=122gb,walltime=6:00:00
#MSUB -M paul.hime@ku.edu
#MSUB -m abe
#MSUB -r n
#MSUB -j oe
#MSUB -q sixhour
#MSUB -d /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping

/panfs/pfs.local/work/bi/bin/bowtie2-2.3.3.1-linux-x86_64/bowtie2 \
     -x /panfs/pfs.local/scratch/glor/p633h050/anolis/dovetail/scrubbed_genome_10kb+ \
     -1 /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/Distichus_female_combined.R1.fastq.gz \
     -2 /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/Distichus_female_combined.R2.fastq.gz \
     -p 24 \
     -S /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.female.sam

### convert sam to bam for male

#MSUB -N sam2bam.male.sh
#MSUB -l nodes=1:ppn=24,mem=122gb,walltime=6:00:00
#MSUB -M paul.hime@ku.edu
#MSUB -m abe
#MSUB -r n
#MSUB -j oe
#MSUB -q sixhour
#MSUB -d /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping

/panfs/pfs.local/work/bi/bin/samtools-1.6/samtools view -@ 24 \
    -bS /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.male.sam \
    > /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.male.bam

### convert sam to bam for female

#MSUB -N sam2bam.female.sh
#MSUB -l nodes=1:ppn=24,mem=122gb,walltime=6:00:00
#MSUB -M paul.hime@ku.edu
#MSUB -m abe
#MSUB -r n
#MSUB -j oe
#MSUB -q sixhour
#MSUB -d /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping

/panfs/pfs.local/work/bi/bin/samtools-1.6/samtools view -@ 24 \
    -bS /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.female.sam \
    > /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.female.bam

### sort and compress bam file male

#MSUB -N sort.male.sh
#MSUB -l nodes=1:ppn=24,mem=122gb,walltime=6:00:00
#MSUB -M paul.hime@ku.edu
#MSUB -m abe
#MSUB -r n
#MSUB -j oe
#MSUB -q sixhour
#MSUB -d /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping

time /panfs/pfs.local/work/bi/bin/samtools-1.6/samtools sort \
     -l 9 \
     -m 5G \
     -O bam \
     -@ 22 \
     /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.male.bam \
     > /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.male.sorted.bam

### sort and compress bam file female

#MSUB -N sort.female.sh
#MSUB -l nodes=1:ppn=24,mem=122gb,walltime=6:00:00
#MSUB -M paul.hime@ku.edu
#MSUB -m abe
#MSUB -r n
#MSUB -j oe
#MSUB -q sixhour
#MSUB -d /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping

time /panfs/pfs.local/work/bi/bin/samtools-1.6/samtools sort \
     -l 9 \
     -m 5G \
     -O bam \
     -@ 22 \
     /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.female.bam \
     > /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.female.sorted.bam

### filter male bam for only reads that are properly paired: both 0x1 and 0x2 bits set and 0x4 bit not set

#MSUB -N proper.pairs.male.sh
#MSUB -l nodes=1:ppn=24,mem=122gb,walltime=6:00:00
#MSUB -M paul.hime@ku.edu
#MSUB -m abe
#MSUB -r n
#MSUB -j oe
#MSUB -q sixhour
#MSUB -d /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping

/panfs/pfs.local/work/bi/bin/samtools-1.3.1/bin/samtools view -b -f 0x2 -F 0x4 -@ 23 /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.male.sorted.copy.bam > /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.male.sorted.proper.pairs.bam

### filter female bam for only reads that are properly paired: both 0x1 and 0x2 bits set and 0x4 bit not set

#MSUB -N proper.pairs.female.sh
#MSUB -l nodes=1:ppn=24,mem=122gb,walltime=6:00:00
#MSUB -M paul.hime@ku.edu
#MSUB -m abe
#MSUB -r n
#MSUB -j oe
#MSUB -q sixhour
#MSUB -d /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping

/panfs/pfs.local/work/bi/bin/samtools-1.3.1/bin/samtools view -b -f 0x2 -F 0x4 -@ 23 /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.female.sorted.copy.bam > /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.female.sorted.proper.pairs.bam

### generate mapping stats for male and female bam files (filtered for proper pairs)

time /panfs/pfs.local/work/bi/bin/samtools-1.3.1/bin/samtools flagstat \
    /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.male.sorted.proper.pairs.bam \
    > /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.male.sorted.proper.pairs.bam

time /panfs/pfs.local/work/bi/bin/samtools-1.3.1/bin/samtools flagstat \
    /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.female.sorted.proper.pairs.bam \
    > /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.female.sorted.proper.pairs.bam

##########################################################################################
#### Use bedtools to plot normalized read depth across scaffolds for males and females
##########################################################################################

### first, make the required genome file (<chromName><TAB><chromSize>)

time awk 'BEGIN {RS = ">" ; ORS = ""} {print($1"\t"length($2));}' scrubbed_genome_10kb+.fasta | sort -k2,2nr | \
    sed 's|ScxkeD|\nScxkeD|g' | grep -v -w "0" | sort -k2,2nr > scrubbed_genome_10kb+.genome

##########################################################################################

### BEDTOOLS READ DEPTH PER SEX FOR PROPER PAIRS ONLY
# bedtools genomecov [OPTIONS] -i <bed/gff/vcf> -g <genome>

#MSUB -N bedtools.proper.sh
#MSUB -l nodes=1:ppn=4,mem=122gb,walltime=6:00:00
#MSUB -M paul.hime@ku.edu
#MSUB -m abe
#MSUB -r n
#MSUB -j oe
#MSUB -q sixhour
#MSUB -d /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping

# male per base
/panfs/pfs.local/work/glor/p633h050/Programs/bedtools2/bin/genomeCoverageBed \
     -pc -d -scale 1.0 \
     -ibam /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.male.sorted.proper.pairs.bam \ 
     -g /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.genome \
     > /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.male.sorted.bam.proper.pairs.depth.per.base.out &

# female per base
/panfs/pfs.local/work/glor/p633h050/Programs/bedtools2/bin/genomeCoverageBed \
     -pc -d -scale 1.0 \
     -ibam /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.female.sorted.proper.pairs.bam \ 
     -g /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.genome \
     > /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.female.sorted.bam.proper.pairs.depth.per.base.out

wait

##########################################################################################
### Parse and analyze the bedtools output for males and females
##########################################################################################

### The number of records in each of these *out files is huge...
### Use awk to split each *out file into a separate file (n = 3532) for each scaffold

### Make new directories to dump these per-scaffold per-base depth records
mkdir /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/split_male_proper_base
mkdir /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/split_female_proper_base

### For each sex, split the per-position depth file by scaffold (3532 files per sex)

#MSUB -N split.base.outs.sh
#MSUB -l nodes=1:ppn=2,mem=122gb,walltime=6:00:00
#MSUB -M paul.hime@ku.edu
#MSUB -m abe
#MSUB -r n
#MSUB -j oe
#MSUB -q sixhour
#MSUB -d /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping

cd /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/split_male_proper_base; time awk '{print>$1".proper.txt"}' /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.male.sorted.bam.proper.pairs.depth.per.base.out &
cd /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/split_female_proper_base; time awk '{print>$1".proper.txt"}' /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.female.sorted.bam.proper.pairs.depth.per.base.out

wait

### Now, calculate median coverage of each scaffold for male and female
### bedtools has some functionality to do this with "groupby"
### but these scripts appear to be slightly faster

#MSUB -N scaffold.median.depth.sh
#MSUB -l nodes=1:ppn=2,mem=122gb,walltime=6:00:00
#MSUB -M paul.hime@ku.edu
#MSUB -m abe
#MSUB -r n
#MSUB -j oe
#MSUB -q sixhour
#MSUB -d /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping

### remember that these output files will be lists of median depth for each scaffold/contig,
### one per line, in the same order as scaffolds/contigs in the file scrubbed_genome_10kb+.genome

### for male
rm /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/male.per.base.median.depth.across.scaffolds.txt;
time for i in `awk '{print $1}' /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.genome`; \
    do awk '{print $3}' /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/split_male_proper_base/"$i".proper.txt | \
    sort -n | awk '{arr[NR]=$1} END {if(NR%2==1) print arr[(NR+1)/2]; else print (arr[NR/2]+arr[NR/2+1])/2}' \
    >> /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/male.per.base.median.depth.across.scaffolds.txt; done &

### for female
rm /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/female.per.base.median.depth.across.scaffolds.txt;
time for i in `awk '{print $1}' /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/scrubbed_genome_10kb+.genome`; \
    do awk '{print $3}' /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/split_female_proper_base/"$i".proper.txt | \
    sort -n | awk '{arr[NR]=$1} END {if(NR%2==1) print arr[(NR+1)/2]; else print (arr[NR/2]+arr[NR/2+1])/2}' \
    >> /panfs/pfs.local/scratch/glor/p633h050/anolis/read_mapping/female.per.base.median.depth.across.scaffolds.txt; done

wait

##########################################################################################
### Parse and analyze these output files for males and females as in the Mongue et al. 2017
### G3 paper (Neo-sex chromosomes in the Monarch butterfly, Danaus)
##########################################################################################

### In either R or excel, perform the following steps:

# Calculate the mean of the median depth across all scaffolds for male (MeanMedianCovMale).

# Calculate the mean of the median depth across all scaffolds for female (MeanMedianCovFemale).

# Normalize for different degrees of sequencing effort between males and (pooled) females:
    # for each male scaffold/contig, divide median scaffold depth by MeanMedianCovMale
    # for each female scaffold/contig, divide median scaffold depth by MeanMedianCovFemale

# For each scaffold, calculate log2(F/M), the log2 ratio of normalized Female:Male depth

# Across all scaffolds/contigs, log2(F/M) should be centered at zero.

# Because we think Anolis distichus has male heterogamety:
    # log2(F/M) ≈ 0 indicate putative autosomal scaffolds/contigs
    # log2(F/M) << 0 indicate putative Y-linked scaffolds/contigs
    # log2(F/M) >> 0 indicate putative X-linked scaffolds/contigs
